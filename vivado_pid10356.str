/*

Xilinx Vivado v2018.3 (64-bit) [Major: 2018, Minor: 3]
SW Build: 2405991 on Thu Dec  6 23:38:27 MST 2018
IP Build: 2404404 on Fri Dec  7 01:43:56 MST 2018

Process ID (PID): 10356
License: Customer

Current time: 	Mon May 20 13:42:35 ICT 2019
Time zone: 	Indochina Time (Asia/Bangkok)

OS: Windows 10
OS Version: 10.0
OS Architecture: amd64
Available processors (cores): 4

Screen size: 1366x768
Screen resolution (DPI): 96
Available screens: 1
Available disk space: 102 GB
Default font: family=Dialog,name=Dialog,style=plain,size=12

Java version: 	9.0.4 64-bit
Java home: 	D:/Xlinx/Vivado/2018.3/tps/win64/jre9.0.4
Java executable location: 	D:/Xlinx/Vivado/2018.3/tps/win64/jre9.0.4/bin/java.exe
Java initial memory (-Xms): 	128 MB
Java maximum memory (-Xmx):	 3 GB


User name: 	User
User home directory: C:/Users/User
User working directory: C:/Users/User/Desktop/Repos/ponggame_finalproject
User country: 	US
User language: 	en
User locale: 	en_US

RDI_BASEROOT: D:/Xlinx/Vivado
HDI_APPROOT: D:/Xlinx/Vivado/2018.3
RDI_DATADIR: D:/Xlinx/Vivado/2018.3/data
RDI_BINDIR: D:/Xlinx/Vivado/2018.3/bin

Vivado preferences file location: C:/Users/User/AppData/Roaming/Xilinx/Vivado/2018.3/vivado.xml
Vivado preferences directory: C:/Users/User/AppData/Roaming/Xilinx/Vivado/2018.3/
Vivado layouts directory: C:/Users/User/AppData/Roaming/Xilinx/Vivado/2018.3/layouts
PlanAhead jar file location: 	D:/Xlinx/Vivado/2018.3/lib/classes/planAhead.jar
Vivado log file location: 	C:/Users/User/Desktop/Repos/ponggame_finalproject/vivado.log
Vivado journal file location: 	C:/Users/User/Desktop/Repos/ponggame_finalproject/vivado.jou
Engine tmp dir: 	C:/Users/User/Desktop/Repos/ponggame_finalproject/.Xil/Vivado-10356-Natthapong-Laptop

Xilinx Environment Variables
----------------------------
XILINX: D:/Xlinx/Vivado/2018.3/ids_lite/ISE
XILINX_DSP: D:/Xlinx/Vivado/2018.3/ids_lite/ISE
XILINX_PLANAHEAD: D:/Xlinx/Vivado/2018.3
XILINX_SDK: D:/Xlinx/SDK/2018.3
XILINX_VIVADO: D:/Xlinx/Vivado/2018.3
XILINX_VIVADO_HLS: D:/Xlinx/Vivado/2018.3


GUI allocated memory:	154 MB
GUI max memory:		3,072 MB
Engine allocated memory: 558 MB

Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.

*/

// TclEventType: START_GUI
// WARNING: HEventQueue.dispatchEvent() is taking  2172 ms.
// Tcl Message: start_gui 
// TclEventType: PROJECT_OPEN_DIALOG
// bx (cp):  Open Project : addNotify
// Opening Vivado Project: C:\Users\User\Desktop\Repos\ponggame_finalproject\Ponggame.xpr. Version: Vivado v2018.3 
// TclEventType: DEBUG_PROBE_SET_CHANGE
// HMemoryUtils.trashcanNow. Engine heap size: 566 MB. GUI used memory: 39 MB. Current time: 5/20/19, 1:42:37 PM ICT
// Tcl Message: open_project C:/Users/User/Desktop/Repos/ponggame_finalproject/Ponggame.xpr 
// TclEventType: MSGMGR_MOVEMSG
// TclEventType: FILE_SET_NEW
// TclEventType: RUN_COMPLETED
// TclEventType: RUN_CURRENT
// TclEventType: PROJECT_DASHBOARD_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_NEW
// Tcl Message: open_project C:/Users/User/Desktop/Repos/ponggame_finalproject/Ponggame.xpr 
// Tcl Message: INFO: [Project 1-313] Project file moved from 'C:/Users/Sawaphob Chavana/Desktop/ponggame_finalproject' since last save. 
// Tcl Message: Scanning sources... Finished scanning sources 
// Tcl Message: INFO: [IP_Flow 19-234] Refreshing IP repositories INFO: [IP_Flow 19-1704] No user IP repositories specified 
// Tcl Message: INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'D:/Xlinx/Vivado/2018.3/data/ip'. 
// TclEventType: PROJECT_NEW
// [GUI Memory]: 96 MB (+98211kb) [00:00:40]
// [Engine Memory]: 611 MB (+489204kb) [00:00:40]
// WARNING: HEventQueue.dispatchEvent() is taking  10394 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 648 MB. GUI used memory: 45 MB. Current time: 5/20/19, 1:42:59 PM ICT
// [Engine Memory]: 648 MB (+6343kb) [00:00:48]
// WARNING: HEventQueue.dispatchEvent() is taking  2037 ms.
// Tcl Message: open_project: Time (s): cpu = 00:00:35 ; elapsed = 00:00:22 . Memory (MB): peak = 675.438 ; gain = 75.691 
// Project name: Ponggame; location: C:/Users/User/Desktop/Repos/ponggame_finalproject; part: xc7a35tcpg236-1
// [Engine Memory]: 736 MB (+58945kb) [00:00:52]
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 1152 ms. Increasing delay to 3000 ms.
dismissDialog("Open Project"); // bx (cp)
// [Engine Memory]: 784 MB (+11889kb) [00:00:54]
// a (cp): Critical Messages: addNotify
// Tcl Message: update_compile_order -fileset sources_1 
// Elapsed time: 14 seconds
selectButton(PAResourceAtoD.CmdMsgDialog_OK, "OK"); // f (a)
dismissDialog("Critical Messages"); // a (cp)
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1765 ms. Increasing delay to 5295 ms.
// Elapsed time: 15 seconds
selectButton(PAResourceCommand.PACommandNames_TOGGLE_VIEW_NAV, (String) null); // B (E, cp)
// Run Command: PAResourceCommand.PACommandNames_TOGGLE_VIEW_NAV
// [GUI Memory]: 103 MB (+2622kb) [00:01:24]
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, z80_tester (z80_tester.v)]", 3); // B (D, cp)
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, z80_tester (z80_tester.v)]", 3); // B (D, cp)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, z80_tester (z80_tester.v)]", 3); // B (D, cp)
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, z80_tester (z80_tester.v)]", 3); // B (D, cp)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, segmentTest (segmentTest.v)]", 5); // B (D, cp)
// PAPropertyPanels.initPanels (whichSegment.v) elapsed time: 0.4s
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, segmentTest (segmentTest.v), ws : whichSegment (whichSegment.v)]", 6, false); // B (D, cp)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, segmentTest (segmentTest.v), pS : pixelSegment (pixelSegment.v)]", 7, false); // B (D, cp)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, segmentTest (segmentTest.v), pS : pixelSegment (pixelSegment.v)]", 7, false); // B (D, cp)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, segmentTest (segmentTest.v), ws : whichSegment (whichSegment.v)]", 6, false); // B (D, cp)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, z80_tester (z80_tester.v)]", 3); // B (D, cp)
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, z80_tester (z80_tester.v)]", 3); // B (D, cp)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, Memory File]", 8); // B (D, cp)
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, Memory File]", 8); // B (D, cp)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, z80_tester (z80_tester.v)]", 3); // B (D, cp)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, z80_tester (z80_tester.v), mem : mem_mapped_keyboard (mem_mapped_keyboard.v)]", 6); // B (D, cp)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, z80_tester (z80_tester.v), mem : mem_mapped_keyboard (mem_mapped_keyboard.v), pong : gamepongrgb (gamepongrgb.v)]", 9, true); // B (D, cp) - Node
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, z80_tester (z80_tester.v), mem : mem_mapped_keyboard (mem_mapped_keyboard.v)]", 6); // B (D, cp)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, z80_tester (z80_tester.v), mem : mem_mapped_keyboard (mem_mapped_keyboard.v)]", 6); // B (D, cp)
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, z80_tester (z80_tester.v), mem : mem_mapped_keyboard (mem_mapped_keyboard.v)]", 6); // B (D, cp)
// WARNING: HEventQueue.dispatchEvent() is taking  1462 ms.
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, z80_tester (z80_tester.v)]", 3); // B (D, cp)
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, segmentTest (segmentTest.v)]", 5); // B (D, cp)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, segmentTest (segmentTest.v)]", 5); // B (D, cp)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, segmentTest (segmentTest.v)]", 5, true); // B (D, cp) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, segmentTest (segmentTest.v)]", 5, true, false, false, false, true, false); // B (D, cp) - Popup Trigger - Node
selectMenuItem(RDIResourceCommand.RDICommands_DELETE, "Remove File from Project..."); // af (al, Popup.HeavyWeightWindow)
// Run Command: RDIResourceCommand.RDICommands_DELETE
// aE (cp): Remove Sources: addNotify
selectCheckBox(PAResourceQtoS.RemoveSourcesDialog_ALSO_DELETE, "Also delete the project local file/directory from disk", true); // g (Q, aE): TRUE
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (aE)
dismissDialog("Remove Sources"); // aE (cp)
// Tcl Message: export_ip_user_files -of_objects  [get_files C:/Users/User/Desktop/Repos/ponggame_finalproject/Ponggame.srcs/sources_1/new/segmentTest.v] -no_script -reset -force -quiet 
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// aE (cp): Remove Sources: addNotify
// bx (aE):  Remove Sources : addNotify
// Tcl Message: remove_files  C:/Users/User/Desktop/Repos/ponggame_finalproject/Ponggame.srcs/sources_1/new/segmentTest.v 
// Tcl Message: file delete -force C:/Users/User/Desktop/Repos/ponggame_finalproject/Ponggame.srcs/sources_1/new/segmentTest.v 
dismissDialog("Remove Sources"); // bx (aE)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, segmentTest (segmentTest.v)]", 5, true); // B (D, cp) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, segmentTest (segmentTest.v)]", 5, true, false, false, false, false, true); // B (D, cp) - Double Click - Node
// ad (cp): Unable to Open File: addNotify
selectButton(PAResourceOtoP.OpenFileAction_CANCEL, "Cancel"); // a (ad)
dismissDialog("Unable to Open File"); // ad (cp)
// [GUI Memory]: 110 MB (+1650kb) [00:02:28]
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, blackOrWhite (blackOrWhite.v)]", 4, true); // B (D, cp) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, blackOrWhite (blackOrWhite.v)]", 4, true, false, false, false, true, false); // B (D, cp) - Popup Trigger - Node
selectMenuItem(RDIResourceCommand.RDICommands_DELETE, "Remove File from Project..."); // af (al, Popup.HeavyWeightWindow)
// Run Command: RDIResourceCommand.RDICommands_DELETE
// aE (cp): Remove Sources: addNotify
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (aE)
dismissDialog("Remove Sources"); // aE (cp)
// Tcl Message: export_ip_user_files -of_objects  [get_files C:/Users/User/Desktop/Repos/ponggame_finalproject/Ponggame.srcs/sources_1/new/blackOrWhite.v] -no_script -reset -force -quiet 
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Tcl Message: remove_files  C:/Users/User/Desktop/Repos/ponggame_finalproject/Ponggame.srcs/sources_1/new/blackOrWhite.v 
// aE (cp): Remove Sources: addNotify
// bx (aE):  Remove Sources : addNotify
// Tcl Message: file delete -force C:/Users/User/Desktop/Repos/ponggame_finalproject/Ponggame.srcs/sources_1/new/blackOrWhite.v 
dismissDialog("Remove Sources"); // bx (aE)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources]", 6); // B (D, cp)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1]", 7); // B (D, cp)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, z80_tester (z80_tester.v)]", 10); // B (D, cp)
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources]", 6); // B (D, cp)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, Verilog Header]", 1); // B (D, cp)
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, Verilog Header]", 1); // B (D, cp)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, Non-module Files]", 2); // B (D, cp)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, Non-module Files, keyboard.v]", 3, false); // B (D, cp)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, Non-module Files, core.vh]", 4, false); // B (D, cp)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, Non-module Files, coremodules.vh]", 5, false); // B (D, cp)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, Non-module Files, exec_module.vh]", 8, false); // B (D, cp)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, Non-module Files, temp_wires.vh]", 11, false); // B (D, cp)
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, Non-module Files]", 2); // B (D, cp)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, Non-module Files]", 2); // B (D, cp)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, Non-module Files, keyboard.v]", 3, false); // B (D, cp)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, Non-module Files, keyboard.v]", 3, false, false, false, false, true, false); // B (D, cp) - Popup Trigger
selectMenuItem(RDIResourceCommand.RDICommands_DELETE, "Remove File from Project..."); // af (al, Popup.HeavyWeightWindow)
// Run Command: RDIResourceCommand.RDICommands_DELETE
// aE (cp): Remove Sources: addNotify
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (aE)
// 'c' command handler elapsed time: 4 seconds
dismissDialog("Remove Sources"); // aE (cp)
// Tcl Message: export_ip_user_files -of_objects  [get_files C:/Users/User/Desktop/Repos/ponggame_finalproject/Ponggame.srcs/sources_1/new/keyboard.v] -no_script -reset -force -quiet 
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Tcl Message: remove_files  C:/Users/User/Desktop/Repos/ponggame_finalproject/Ponggame.srcs/sources_1/new/keyboard.v 
// HMemoryUtils.trashcanNow. Engine heap size: 817 MB. GUI used memory: 51 MB. Current time: 5/20/19, 1:45:32 PM ICT
// Elapsed time: 11 seconds
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, Non-module Files]", 2); // B (D, cp)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, z80_tester (z80_tester.v)]", 3); // B (D, cp)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, z80_tester (z80_tester.v), mem : mem_mapped_keyboard (mem_mapped_keyboard.v)]", 6); // B (D, cp)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, z80_tester (z80_tester.v), mem : mem_mapped_keyboard (mem_mapped_keyboard.v), pong : gamepongrgb (gamepongrgb.v)]", 9); // B (D, cp)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, z80_tester (z80_tester.v), mem : mem_mapped_keyboard (mem_mapped_keyboard.v), pong : gamepongrgb (gamepongrgb.v)]", 9, true); // B (D, cp) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, z80_tester (z80_tester.v), mem : mem_mapped_keyboard (mem_mapped_keyboard.v), pong : gamepongrgb (gamepongrgb.v)]", 9, true, false, false, false, false, true); // B (D, cp) - Double Click - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, z80_tester (z80_tester.v), mem : mem_mapped_keyboard (mem_mapped_keyboard.v), pong : gamepongrgb (gamepongrgb.v)]", 9, true); // B (D, cp) - Node
// Elapsed time: 11 seconds
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, z80_tester (z80_tester.v), mem : mem_mapped_keyboard (mem_mapped_keyboard.v), uut : PS2Receiver (PS2Receiver.v)]", 10); // B (D, cp)
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, z80_tester (z80_tester.v), mem : mem_mapped_keyboard (mem_mapped_keyboard.v), uut : PS2Receiver (PS2Receiver.v)]", 10); // B (D, cp)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, z80_tester (z80_tester.v), mem : mem_mapped_keyboard (mem_mapped_keyboard.v), q7seg : quadSevenSeg (quadSevenSeg.v)]", 12); // B (D, cp)
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, z80_tester (z80_tester.v), mem : mem_mapped_keyboard (mem_mapped_keyboard.v), q7seg : quadSevenSeg (quadSevenSeg.v)]", 12); // B (D, cp)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, z80_tester (z80_tester.v), mem : mem_mapped_keyboard (mem_mapped_keyboard.v), pong : gamepongrgb (gamepongrgb.v)]", 9); // B (D, cp)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, z80_tester (z80_tester.v), mem : mem_mapped_keyboard (mem_mapped_keyboard.v), pong : gamepongrgb (gamepongrgb.v), ws : whichSegment (whichSegment.v)]", 10, false); // B (D, cp)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, z80_tester (z80_tester.v), mem : mem_mapped_keyboard (mem_mapped_keyboard.v), pong : gamepongrgb (gamepongrgb.v), ws : whichSegment (whichSegment.v)]", 10, false, false, false, false, false, true); // B (D, cp) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, z80_tester (z80_tester.v), mem : mem_mapped_keyboard (mem_mapped_keyboard.v), pong : gamepongrgb (gamepongrgb.v), pS : pixelSegment (pixelSegment.v)]", 11, false); // B (D, cp)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, z80_tester (z80_tester.v), mem : mem_mapped_keyboard (mem_mapped_keyboard.v), pong : gamepongrgb (gamepongrgb.v), pS : pixelSegment (pixelSegment.v)]", 11, false); // B (D, cp)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, z80_tester (z80_tester.v), mem : mem_mapped_keyboard (mem_mapped_keyboard.v), pong : gamepongrgb (gamepongrgb.v), pS : pixelSegment (pixelSegment.v)]", 11, false, false, false, false, false, true); // B (D, cp) - Double Click
// Elapsed time: 31 seconds
closeView(PAResourceOtoP.PAViews_CODE, "Code"); // B
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "mem_mapped_keyboard.v", 2); // k (j, cp)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "gamepongrgb.v", 1); // k (j, cp)
selectCodeEditor("gamepongrgb.v", 273, 197); // cl (w, cp)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "whichSegment.v", 3); // k (j, cp)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "gamepongrgb.v", 1); // k (j, cp)
// Elapsed time: 48 seconds
selectCodeEditor("gamepongrgb.v", 266, 275); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 257, 265); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 282, 299); // cl (w, cp)
// Elapsed time: 51 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "mem_mapped_keyboard.v", 2); // k (j, cp)
// Elapsed time: 126 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "gamepongrgb.v", 1); // k (j, cp)
selectCodeEditor("gamepongrgb.v", 163, 197); // cl (w, cp)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed time: 17 seconds
selectCodeEditor("gamepongrgb.v", 170, 89); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 193, 228); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 194, 220); // cl (w, cp)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed time: 254 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "mem_mapped_keyboard.v", 2); // k (j, cp)
selectCodeEditor("mem_mapped_keyboard.v", 145, 323); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 130, 346); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 137, 329); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 123, 339); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 119, 334); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 116, 351); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 121, 329); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 130, 356); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 133, 338); // cl (w, cp)
// Elapsed time: 27 seconds
selectCodeEditor("mem_mapped_keyboard.v", 324, 299); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 232, 298); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 110, 346); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 246, 303); // cl (w, cp)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed time: 120 seconds
selectCodeEditor("mem_mapped_keyboard.v", 119, 102); // cl (w, cp)
// Elapsed time: 12 seconds
selectCodeEditor("mem_mapped_keyboard.v", 204, 209); // cl (w, cp)
// Elapsed time: 23 seconds
selectCodeEditor("mem_mapped_keyboard.v", 139, 59); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 102, 197, false, false, false, true, false); // cl (w, cp) - Popup Trigger
selectCodeEditor("mem_mapped_keyboard.v", 88, 223); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 130, 197); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 99, 172); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 110, 179); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 107, 195); // cl (w, cp)
// Elapsed time: 12 seconds
selectCodeEditor("mem_mapped_keyboard.v", 140, 266); // cl (w, cp)
// Elapsed time: 13 seconds
selectCodeEditor("mem_mapped_keyboard.v", 96, 263, false, false, false, true, false); // cl (w, cp) - Popup Trigger
selectMenuItem(RDIResource.HInputHandler_REPLACE_TEXT, "Replace..."); // af (al, Popup.HeavyWeightWindow)
// Elapsed time: 21 seconds
selectComboBox("FindAndReplaceDialog.cp_Replace with:", "leftPaddlePos", -1); // JComboBox (cp, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cp_Find", "Find"); // JButton (cp, FindAndReplaceDialog)
selectCodeEditor("mem_mapped_keyboard.v", 103, 192); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 103, 192, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("mem_mapped_keyboard.v", 90, 204, false, false, false, true, false); // cl (w, cp) - Popup Trigger
selectMenuItem(RDIResource.HInputHandler_REPLACE_TEXT, "Replace..."); // af (al, Popup.HeavyWeightWindow)
selectComboBox("FindAndReplaceDialog.cp_Replace with:", "rightPaddlePos", -1); // JComboBox (cp, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cp_Find", "Find"); // JButton (cp, FindAndReplaceDialog)
// Elapsed time: 10 seconds
selectCodeEditor("mem_mapped_keyboard.v", 120, 295); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 120, 295, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("mem_mapped_keyboard.v", 100, 135); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 100, 135, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("mem_mapped_keyboard.v", 100, 135); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 102, 152); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 102, 152, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("mem_mapped_keyboard.v", 88, 124); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 88, 124, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("mem_mapped_keyboard.v", 88, 124, false, false, false, true, false); // cl (w, cp) - Popup Trigger
selectMenuItem(RDIResource.HInputHandler_REPLACE_TEXT, "Replace..."); // af (al, Popup.HeavyWeightWindow)
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
selectComboBox("FindAndReplaceDialog.cp_Replace with:", "ballPosX", -1); // JComboBox (cp, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cp_Find", "Find"); // JButton (cp, FindAndReplaceDialog)
selectCodeEditor("mem_mapped_keyboard.v", 84, 142); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 84, 142, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("mem_mapped_keyboard.v", 86, 145, false, false, false, true, false); // cl (w, cp) - Popup Trigger
selectMenuItem(RDIResource.HInputHandler_REPLACE_TEXT, "Replace..."); // af (al, Popup.HeavyWeightWindow)
typeControlKey(null, null, 'z');
selectComboBox("FindAndReplaceDialog.cp_Replace with:", "ballPosY", -1); // JComboBox (cp, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cp_Find", "Find"); // JButton (cp, FindAndReplaceDialog)
selectCodeEditor("mem_mapped_keyboard.v", 193, 216); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 106, 229); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 106, 229, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("mem_mapped_keyboard.v", 108, 253); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 108, 248); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 93, 266); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 56, 285); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 56, 285, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("mem_mapped_keyboard.v", 73, 282); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 56, 279); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 56, 279, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("mem_mapped_keyboard.v", 56, 279, false, false, false, true, false); // cl (w, cp) - Popup Trigger
selectMenuItem(RDIResource.HInputHandler_REPLACE_TEXT, "Replace..."); // af (al, Popup.HeavyWeightWindow)
// Elapsed time: 13 seconds
selectComboBox("FindAndReplaceDialog.cp_Replace with:", "acceralationX", -1); // JComboBox (cp, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cp_Find", "Find"); // JButton (cp, FindAndReplaceDialog)
selectCodeEditor("mem_mapped_keyboard.v", 86, 110); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 86, 110, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("mem_mapped_keyboard.v", 86, 110, false, false, false, true, false); // cl (w, cp) - Popup Trigger
selectMenuItem(RDIResource.HInputHandler_REPLACE_TEXT, "Replace..."); // af (al, Popup.HeavyWeightWindow)
selectComboBox("FindAndReplaceDialog.cp_Replace with:", "acceralationY", -1); // JComboBox (cp, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cp_Find", "Find"); // JButton (cp, FindAndReplaceDialog)
selectCodeEditor("mem_mapped_keyboard.v", 424, 210); // cl (w, cp)
// Elapsed time: 25 seconds
selectCodeEditor("mem_mapped_keyboard.v", 203, 250); // cl (w, cp)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed time: 663 seconds
selectCodeEditor("mem_mapped_keyboard.v", 187, 343); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 206, 334); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 142, 329); // cl (w, cp)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "gamepongrgb.v", 1); // k (j, cp)
selectCodeEditor("gamepongrgb.v", 218, 243); // cl (w, cp)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// HMemoryUtils.trashcanNow. Engine heap size: 817 MB. GUI used memory: 55 MB. Current time: 5/20/19, 2:15:32 PM ICT
// Elapsed time: 145 seconds
selectCodeEditor("gamepongrgb.v", 238, 334); // cl (w, cp)
// Elapsed time: 27 seconds
selectCodeEditor("gamepongrgb.v", 182, 379); // cl (w, cp)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed time: 10 seconds
selectCodeEditor("gamepongrgb.v", 233, 294); // cl (w, cp)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
selectCodeEditor("gamepongrgb.v", 177, 381); // cl (w, cp)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed time: 11 seconds
selectCodeEditor("gamepongrgb.v", 193, 127); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 224, 142); // cl (w, cp)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed time: 41 seconds
selectCodeEditor("gamepongrgb.v", 255, 153); // cl (w, cp)
// Elapsed time: 29 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "mem_mapped_keyboard.v", 2); // k (j, cp)
// Elapsed time: 10 seconds
selectCodeEditor("mem_mapped_keyboard.v", 207, 241); // cl (w, cp)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed time: 18 seconds
selectCodeEditor("mem_mapped_keyboard.v", 251, 338); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 357, 142); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 211, 404); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 117, 245); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 111, 245); // cl (w, cp)
typeControlKey((HResource) null, "mem_mapped_keyboard.v", 'c'); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 209, 312); // cl (w, cp)
typeControlKey((HResource) null, "mem_mapped_keyboard.v", 'v'); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 326, 314); // cl (w, cp)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
selectCodeEditor("mem_mapped_keyboard.v", 424, 370); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 21, 174); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 19, 135); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 63, 270); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 192, 252); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 298, 294); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 271, 321); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 380, 197); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 273, 330); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 440, 275); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 298, 308); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 451, 224); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 379, 260); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 565, 206); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 442, 262); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 528, 211); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 348, 296); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 465, 243); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 242, 310); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 362, 255); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 249, 291); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 294, 271); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 289, 187); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 220, 146); // cl (w, cp)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed time: 13 seconds
selectCodeEditor("mem_mapped_keyboard.v", 208, 242); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 209, 309); // cl (w, cp)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
selectCodeEditor("mem_mapped_keyboard.v", 227, 207); // cl (w, cp)
// Elapsed time: 16 seconds
selectCodeEditor("mem_mapped_keyboard.v", 132, 371); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 127, 381); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 82, 382); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 84, 382, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("mem_mapped_keyboard.v", 176, 349); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 145, 362); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 187, 374); // cl (w, cp)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed time: 45 seconds
selectCodeEditor("mem_mapped_keyboard.v", 26, 409); // cl (w, cp)
// Elapsed time: 279 seconds
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
selectCodeEditor("mem_mapped_keyboard.v", 164, 418, false, true, false, false, false); // cl (w, cp) - Control Key
selectCodeEditor("mem_mapped_keyboard.v", 164, 418, false, true, false, false, true); // cl (w, cp) - Control Key - Double Click
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
selectCodeEditor("mem_mapped_keyboard.v", 141, 404); // cl (w, cp)
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
selectCodeEditor("mem_mapped_keyboard.v", 141, 404, false, true, false, false, false); // cl (w, cp) - Control Key
selectCodeEditor("mem_mapped_keyboard.v", 141, 404, false, true, false, false, true); // cl (w, cp) - Control Key - Double Click
selectCodeEditor("mem_mapped_keyboard.v", 141, 404); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 102, 382); // cl (w, cp)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed time: 92 seconds
closeView(PAResourceOtoP.PAViews_CODE, "Code"); // B
closeView(PAResourceOtoP.PAViews_PROJECT_SUMMARY, "Project Summary"); // v
unMinimizeFrame(PAResourceOtoP.PAViews_SOURCES, "Sources"); // ax
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, z80_tester (z80_tester.v)]", 3, true); // B (D, cp) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, z80_tester (z80_tester.v)]", 3, true, false, false, false, false, true); // B (D, cp) - Double Click - Node
// PAResourceOtoP.PAViews_SOURCES: Sources: close view
selectCodeEditor("z80_tester.v", 283, 206); // cl (w, cp)
setText(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "led", true); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "led"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "led"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "led"); // l (aT, cp)
// Elapsed time: 19 seconds
setText(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "led"); // l (aT, cp)
selectCodeEditor("z80_tester.v", 158, 369); // cl (w, cp)
selectCodeEditor("z80_tester.v", 57, 156); // cl (w, cp)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
selectCodeEditor("z80_tester.v", 241, 49); // cl (w, cp)
selectCodeEditor("z80_tester.v", 423, 208); // cl (w, cp)
selectCodeEditor("z80_tester.v", 519, 181); // cl (w, cp)
// Elapsed time: 12 seconds
selectCodeEditor("z80_tester.v", 463, 63); // cl (w, cp)
selectCodeEditor("z80_tester.v", 331, 9); // cl (w, cp)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed time: 16 seconds
unMinimizeFrame(RDIResource.RDIViews_PROPERTIES, "Properties"); // ax
selectButton(PAResourceOtoP.PlanAheadTab_SHOW_FLOW_NAVIGATOR, "Flow Navigator"); // z (L, cp)
selectButton(PAResourceCommand.PACommandNames_TOGGLE_VIEW_NAV, (String) null); // B (E, cp)
// Run Command: PAResourceCommand.PACommandNames_TOGGLE_VIEW_NAV
// Run Command: PAResourceCommand.PACommandNames_FILESET_WINDOW
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, z80_tester (z80_tester.v)]", 3); // B (D, cp)
setText("RDIResource.SearchCommandComponent_QUICK_ACCESS", "Sources"); // OverlayTextField (K, cp)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, z80_tester (z80_tester.v), cpu : z80_top_direct_n (z80_top_direct_n.v)]", 5, true); // B (D, cp) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, z80_tester (z80_tester.v), cpu : z80_top_direct_n (z80_top_direct_n.v)]", 5, true); // B (D, cp) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, z80_tester (z80_tester.v), cpu : z80_top_direct_n (z80_top_direct_n.v), decode_state_ : decode_state (decode_state.v)]", 7, false, false, false, false, false, true); // B (D, cp) - Double Click
selectCodeEditor("z80_top_direct_n.v", 320, 335); // cl (w, cp)
setText(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "A", true); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "A"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "A"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "A"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "A"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "A"); // l (aT, cp)
selectButton(RDIResource.HCodeEditor_CLOSE, (String) null); // k (aL, cp)
selectCodeEditor("z80_top_direct_n.v", 100, 296); // cl (w, cp)
selectCodeEditor("z80_top_direct_n.v", 100, 296, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("z80_top_direct_n.v", 100, 296); // cl (w, cp)
selectCodeEditor("z80_top_direct_n.v", 102, 296); // cl (w, cp)
selectCodeEditor("z80_top_direct_n.v", 204, 268); // cl (w, cp)
selectCodeEditor("z80_top_direct_n.v", 369, 220); // cl (w, cp)
selectCodeEditor("z80_top_direct_n.v", 213, 200); // cl (w, cp)
// Elapsed time: 144 seconds
closeView(PAResourceOtoP.PAViews_CODE, "Code"); // B
selectButton(RDIResource.HCodeEditor_CLOSE, (String) null); // k (aL, cp)
// Elapsed time: 100 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "mem_mapped_keyboard.v", 1); // k (j, cp)
selectCodeEditor("mem_mapped_keyboard.v", 108, 186); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 137, 177); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 113, 40); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 127, 246); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 117, 194); // cl (w, cp)
// Elapsed time: 33 seconds
selectCodeEditor("mem_mapped_keyboard.v", 271, 238); // cl (w, cp)
setText(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "address", true); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "address"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "address"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "address"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "address"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "address"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "address"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "address"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "address"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "address"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "address"); // l (aT, cp)
selectCodeEditor("mem_mapped_keyboard.v", 286, 350); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 150, 246); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 27, 244); // cl (w, cp)
// Elapsed time: 10 seconds
selectCodeEditor("mem_mapped_keyboard.v", 81, 235); // cl (w, cp)
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
// Elapsed time: 13 seconds
selectCodeEditor("mem_mapped_keyboard.v", 67, 386); // cl (w, cp)
// Elapsed time: 16 seconds
selectCodeEditor("mem_mapped_keyboard.v", 143, 257); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 159, 244); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 198, 281); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 25, 188); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 153, 149); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 33, 372); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 2, 228); // cl (w, cp)
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 2550 ms. Increasing delay to 4000 ms.
// Elapsed time: 10 seconds
selectCodeEditor("mem_mapped_keyboard.v", 216, 225); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 261, 314); // cl (w, cp)
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 2152 ms. Increasing delay to 5000 ms.
// Elapsed time: 14 seconds
selectCodeEditor("mem_mapped_keyboard.v", 250, 362); // cl (w, cp)
// Elapsed time: 11 seconds
selectCodeEditor("mem_mapped_keyboard.v", 157, 346); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 1, 200); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 107, 363); // cl (w, cp)
// Elapsed time: 13 seconds
selectCodeEditor("mem_mapped_keyboard.v", 134, 135); // cl (w, cp)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed time: 11 seconds
selectCodeEditor("mem_mapped_keyboard.v", 193, 137); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 185, 142); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 0, 64); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 126, 340); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 72, 64); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 69, 74); // cl (w, cp)
// Elapsed time: 21 seconds
selectCodeEditor("mem_mapped_keyboard.v", 185, 366); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 1, 111); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 61, 346); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 57, 389); // cl (w, cp)
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
selectCodeEditor("mem_mapped_keyboard.v", 1, 61); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 167, 318); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 110, 212); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 80, 214); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 145, 266); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 56, 282); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 113, 283); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 92, 297); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 87, 197); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 106, 321); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 59, 331); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 26, 364); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 48, 347); // cl (w, cp)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
selectCodeEditor("mem_mapped_keyboard.v", 344, 371, false, false, false, true, false); // cl (w, cp) - Popup Trigger
// Elapsed time: 59 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "gamepongrgb.v", 0); // k (j, cp)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "mem_mapped_keyboard.v", 1); // k (j, cp)
// [GUI Memory]: 117 MB (+1914kb) [00:58:54]
// Elapsed time: 47 seconds
selectCodeEditor("mem_mapped_keyboard.v", 217, 78); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 406, 61); // cl (w, cp)
// Elapsed time: 12 seconds
selectCodeEditor("mem_mapped_keyboard.v", 199, 128); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 277, 230); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 279, 115); // cl (w, cp)
// Elapsed time: 85 seconds
selectCodeEditor("mem_mapped_keyboard.v", 478, 108); // cl (w, cp)
setText(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data", true); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
// Elapsed time: 12 seconds
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
applyEnter(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "data"); // l (aT, cp)
selectCodeEditor("mem_mapped_keyboard.v", 449, 264); // cl (w, cp)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed time: 10 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "z80_tester.v", 2); // k (j, cp)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "mem_mapped_keyboard.v", 1); // k (j, cp)
selectCodeEditor("mem_mapped_keyboard.v", 69, 388); // cl (w, cp)
// WARNING: HEventQueue.dispatchEvent() is taking  3122 ms.
// Elapsed time: 25 seconds
selectCodeEditor("mem_mapped_keyboard.v", 53, 180); // cl (w, cp)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "gamepongrgb.v", 0); // k (j, cp)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "mem_mapped_keyboard.v", 1); // k (j, cp)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "gamepongrgb.v", 0); // k (j, cp)
selectCodeEditor("gamepongrgb.v", 96, 146); // cl (w, cp)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
selectCodeEditor("gamepongrgb.v", 102, 163); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 88, 241); // cl (w, cp)
// HMemoryUtils.trashcanNow. Engine heap size: 817 MB. GUI used memory: 52 MB. Current time: 5/20/19, 2:45:33 PM ICT
// Elapsed time: 18 seconds
selectCodeEditor("gamepongrgb.v", 187, 235); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 178, 233); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 178, 233, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("gamepongrgb.v", 178, 233, false, false, false, true, false); // cl (w, cp) - Popup Trigger
selectMenuItem(RDIResource.HInputHandler_REPLACE_TEXT, "Replace..."); // af (al, Popup.HeavyWeightWindow)
// Elapsed time: 14 seconds
selectComboBox("FindAndReplaceDialog.cp_Replace with:", "scoreRightPosX", -1); // JComboBox (cp, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cp_Find", "Find"); // JButton (cp, FindAndReplaceDialog)
selectCodeEditor("gamepongrgb.v", 152, 248); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 152, 248, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("gamepongrgb.v", 152, 248, false, false, false, true, false); // cl (w, cp) - Popup Trigger
selectMenuItem(RDIResource.HInputHandler_REPLACE_TEXT, "Replace..."); // af (al, Popup.HeavyWeightWindow)
selectComboBox("FindAndReplaceDialog.cp_Replace with:", "scoreRightPosY", -1); // JComboBox (cp, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cp_Find", "Find"); // JButton (cp, FindAndReplaceDialog)
selectCodeEditor("gamepongrgb.v", 163, 201); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 163, 201, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("gamepongrgb.v", 163, 201, false, false, false, true, false); // cl (w, cp) - Popup Trigger
selectMenuItem(RDIResource.HInputHandler_REPLACE_TEXT, "Replace..."); // af (al, Popup.HeavyWeightWindow)
selectComboBox("FindAndReplaceDialog.cp_Replace with:", "scoreLeftPosX", -1); // JComboBox (cp, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cp_Find", "Find"); // JButton (cp, FindAndReplaceDialog)
selectCodeEditor("gamepongrgb.v", 148, 211); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 148, 211, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("gamepongrgb.v", 156, 210, false, false, false, true, false); // cl (w, cp) - Popup Trigger
selectMenuItem(RDIResource.HInputHandler_REPLACE_TEXT, "Replace..."); // af (al, Popup.HeavyWeightWindow)
selectComboBox("FindAndReplaceDialog.cp_Replace with:", "scoreLeftPosY", -1); // JComboBox (cp, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cp_Find", "Find"); // JButton (cp, FindAndReplaceDialog)
selectCodeEditor("gamepongrgb.v", 147, 156); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 148, 156, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("gamepongrgb.v", 135, 155, false, false, false, true, false); // cl (w, cp) - Popup Trigger
selectMenuItem(RDIResource.HInputHandler_REPLACE_TEXT, "Replace..."); // af (al, Popup.HeavyWeightWindow)
// Elapsed time: 13 seconds
selectComboBox("FindAndReplaceDialog.cp_Replace with:", "PADDLEWIDTH", -1); // JComboBox (cp, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cp_Find", "Find"); // JButton (cp, FindAndReplaceDialog)
selectCodeEditor("gamepongrgb.v", 133, 173); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 133, 173, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("gamepongrgb.v", 157, 175); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 157, 175, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("gamepongrgb.v", 157, 176, false, false, false, true, false); // cl (w, cp) - Popup Trigger
selectMenuItem(RDIResource.HInputHandler_REPLACE_TEXT, "Replace..."); // af (al, Popup.HeavyWeightWindow)
selectComboBox("FindAndReplaceDialog.cp_Replace with:", "PADDLEHEIGHT", -1); // JComboBox (cp, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cp_Find", "Find"); // JButton (cp, FindAndReplaceDialog)
selectCodeEditor("gamepongrgb.v", 145, 148); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 145, 148, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("gamepongrgb.v", 145, 148, false, false, false, true, false); // cl (w, cp) - Popup Trigger
selectMenuItem(RDIResource.HInputHandler_REPLACE_TEXT, "Replace..."); // af (al, Popup.HeavyWeightWindow)
// Elapsed time: 13 seconds
selectComboBox("FindAndReplaceDialog.cp_Find what:", "BALLSIZE", -1); // JComboBox (cp, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cp_Find", "Find"); // JButton (cp, FindAndReplaceDialog)
selectCodeEditor("gamepongrgb.v", 143, 140); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 143, 140, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("gamepongrgb.v", 143, 140, false, false, false, true, false); // cl (w, cp) - Popup Trigger
selectMenuItem(RDIResource.HInputHandler_REPLACE_TEXT, "Replace..."); // af (al, Popup.HeavyWeightWindow)
selectComboBox("FindAndReplaceDialog.cp_Replace with:", "BALLSIZE", -1); // JComboBox (cp, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cp_Find", "Find"); // JButton (cp, FindAndReplaceDialog)
selectCodeEditor("gamepongrgb.v", 126, 297); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 126, 297, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("gamepongrgb.v", 126, 297, false, false, false, true, false); // cl (w, cp) - Popup Trigger
selectMenuItem(RDIResource.HInputHandler_REPLACE_TEXT, "Replace..."); // af (al, Popup.HeavyWeightWindow)
selectComboBox("FindAndReplaceDialog.cp_Find what:", "paddleLeftPosX", -1); // JComboBox (cp, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cp_Find", "Find"); // JButton (cp, FindAndReplaceDialog)
selectCodeEditor("gamepongrgb.v", 117, 295); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 117, 295, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("gamepongrgb.v", 117, 295, false, false, false, true, false); // cl (w, cp) - Popup Trigger
selectMenuItem(RDIResource.HInputHandler_REPLACE_TEXT, "Replace..."); // af (al, Popup.HeavyWeightWindow)
// Elapsed time: 25 seconds
selectComboBox("FindAndReplaceDialog.cp_Replace with:", "paddleLeftPosX", -1); // JComboBox (cp, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cp_Find", "Find"); // JButton (cp, FindAndReplaceDialog)
selectCodeEditor("gamepongrgb.v", 126, 116); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 126, 116, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("gamepongrgb.v", 126, 116, false, false, false, true, false); // cl (w, cp) - Popup Trigger
selectMenuItem(RDIResource.HInputHandler_REPLACE_TEXT, "Replace..."); // af (al, Popup.HeavyWeightWindow)
selectComboBox("FindAndReplaceDialog.cp_Replace with:", "paddleRightPosX", -1); // JComboBox (cp, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cp_Find", "Find"); // JButton (cp, FindAndReplaceDialog)
selectCodeEditor("gamepongrgb.v", 151, 87); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 151, 87, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("gamepongrgb.v", 186, 90); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 124, 123); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 124, 123, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("gamepongrgb.v", 124, 123, false, false, false, true, false); // cl (w, cp) - Popup Trigger
selectMenuItem(RDIResource.HInputHandler_REPLACE_TEXT, "Replace..."); // af (al, Popup.HeavyWeightWindow)
selectComboBox("FindAndReplaceDialog.cp_Find what:", "SCOREWIDTH", -1); // JComboBox (cp, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cp_Find", "Find"); // JButton (cp, FindAndReplaceDialog)
typeControlKey(null, null, 'z');
selectCodeEditor("gamepongrgb.v", 151, 129); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 151, 129, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("gamepongrgb.v", 151, 129, false, false, false, true, false); // cl (w, cp) - Popup Trigger
selectMenuItem(RDIResource.HInputHandler_REPLACE_TEXT, "Replace..."); // af (al, Popup.HeavyWeightWindow)
selectComboBox("FindAndReplaceDialog.cp_Replace with:", "SCOREWIDTH", -1); // JComboBox (cp, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cp_Find", "Find"); // JButton (cp, FindAndReplaceDialog)
selectCodeEditor("gamepongrgb.v", 153, 145); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 153, 145, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("gamepongrgb.v", 153, 145, false, false, false, true, false); // cl (w, cp) - Popup Trigger
selectMenuItem(RDIResource.HInputHandler_REPLACE_TEXT, "Replace..."); // af (al, Popup.HeavyWeightWindow)
selectComboBox("FindAndReplaceDialog.cp_Replace with:", "SCOREHEIGHT", -1); // JComboBox (cp, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cp_Find", "Find"); // JButton (cp, FindAndReplaceDialog)
selectCodeEditor("gamepongrgb.v", 125, 95); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 125, 95, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("gamepongrgb.v", 125, 95, false, false, false, true, false); // cl (w, cp) - Popup Trigger
selectMenuItem(RDIResourceCommand.RDICommands_PASTE, "Paste"); // af (al, Popup.HeavyWeightWindow)
typeControlKey(null, null, 'z');
selectCodeEditor("gamepongrgb.v", 132, 127); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 132, 127, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("gamepongrgb.v", 133, 126, false, false, false, true, false); // cl (w, cp) - Popup Trigger
selectMenuItem(RDIResource.HInputHandler_REPLACE_TEXT, "Replace..."); // af (al, Popup.HeavyWeightWindow)
// Elapsed time: 18 seconds
selectComboBox("FindAndReplaceDialog.cp_Replace with:", "paddleLeftPosY", -1); // JComboBox (cp, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cp_Find", "Find"); // JButton (cp, FindAndReplaceDialog)
selectCodeEditor("gamepongrgb.v", 137, 147); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 137, 147, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("gamepongrgb.v", 137, 147, false, false, false, true, false); // cl (w, cp) - Popup Trigger
selectMenuItem(RDIResource.HInputHandler_REPLACE_TEXT, "Replace..."); // af (al, Popup.HeavyWeightWindow)
selectComboBox("FindAndReplaceDialog.cp_Replace with:", "paddleRightPosY", -1); // JComboBox (cp, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cp_Find", "Find"); // JButton (cp, FindAndReplaceDialog)
selectCodeEditor("gamepongrgb.v", 272, 193); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 206, 165); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 181, 157); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 212, 164); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 293, 237); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 314, 153); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 198, 161); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 171, 107); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 136, 93); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 141, 108); // cl (w, cp)
// Elapsed time: 22 seconds
selectCodeEditor("gamepongrgb.v", 113, 60); // cl (w, cp)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed time: 14 seconds
selectCodeEditor("gamepongrgb.v", 98, 346); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 214, 290); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 329, 235); // cl (w, cp)
unMinimizeFrame(PAResourceOtoP.PAViews_SOURCES, "Sources"); // ax
selectCodeEditor("gamepongrgb.v", 287, 162); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 140, 8); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 140, 86); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 134, 177); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 68, 334); // cl (w, cp)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
selectCodeEditor("gamepongrgb.v", 75, 328); // cl (w, cp)
// Elapsed time: 13 seconds
selectCodeEditor("gamepongrgb.v", 187, 267); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 187, 267, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("gamepongrgb.v", 187, 267); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 187, 267, false, false, false, true, false); // cl (w, cp) - Popup Trigger
selectMenuItem(RDIResource.HInputHandler_REPLACE_TEXT, "Replace..."); // af (al, Popup.HeavyWeightWindow)
selectComboBox("FindAndReplaceDialog.cp_Find what:", "x", -1); // JComboBox (cp, FindAndReplaceDialog)
selectComboBox("FindAndReplaceDialog.cp_Replace with:", "posX", -1); // JComboBox (cp, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cp_Find", "Find"); // JButton (cp, FindAndReplaceDialog)
selectCodeEditor("gamepongrgb.v", 266, 210); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 266, 210, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("gamepongrgb.v", 139, 110); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 139, 110, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("gamepongrgb.v", 139, 110, false, false, false, true, false); // cl (w, cp) - Popup Trigger
selectMenuItem(RDIResource.HInputHandler_REPLACE_TEXT, "Replace..."); // af (al, Popup.HeavyWeightWindow)
selectComboBox("FindAndReplaceDialog.cp_Find what:", "(x", -1); // JComboBox (cp, FindAndReplaceDialog)
selectComboBox("FindAndReplaceDialog.cp_Replace with:", "(posX", -1); // JComboBox (cp, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cp_Find", "Find"); // JButton (cp, FindAndReplaceDialog)
typeControlKey(null, null, 'z');
selectCodeEditor("gamepongrgb.v", 134, 109, false, false, false, true, false); // cl (w, cp) - Popup Trigger
selectMenuItem(RDIResource.HInputHandler_REPLACE_TEXT, "Replace..."); // af (al, Popup.HeavyWeightWindow)
selectButton("FindAndReplaceDialog.cp_Find", "Find"); // JButton (cp, FindAndReplaceDialog)
selectCodeEditor("gamepongrgb.v", 316, 366); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 451, 98, false, false, false, true, false); // cl (w, cp) - Popup Trigger
selectMenuItem(RDIResource.HInputHandler_REPLACE_TEXT, "Replace..."); // af (al, Popup.HeavyWeightWindow)
selectComboBox("FindAndReplaceDialog.cp_Find what:", "(y", -1); // JComboBox (cp, FindAndReplaceDialog)
selectComboBox("FindAndReplaceDialog.cp_Replace with:", "(posY", -1); // JComboBox (cp, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cp_Find", "Find"); // JButton (cp, FindAndReplaceDialog)
selectCodeEditor("gamepongrgb.v", 310, 138); // cl (w, cp)
selectCodeEditor("gamepongrgb.v", 373, 80); // cl (w, cp)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
selectCodeEditor("gamepongrgb.v", 400, 83, false, false, false, true, false); // cl (w, cp) - Popup Trigger
selectMenuItem(RDIResource.HInputHandler_REPLACE_TEXT, "Replace..."); // af (al, Popup.HeavyWeightWindow)
selectComboBox("FindAndReplaceDialog.cp_Replace with:", "posY", -1); // JComboBox (cp, FindAndReplaceDialog)
selectComboBox("FindAndReplaceDialog.cp_Find what:", "y", -1); // JComboBox (cp, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cp_Find", "Find"); // JButton (cp, FindAndReplaceDialog)
selectCodeEditor("gamepongrgb.v", 228, 309); // cl (w, cp)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
selectCodeEditor("gamepongrgb.v", 619, 131); // cl (w, cp)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed time: 14 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "mem_mapped_keyboard.v", 1); // k (j, cp)
// HMemoryUtils.trashcanNow. Engine heap size: 817 MB. GUI used memory: 52 MB. Current time: 5/20/19, 3:15:33 PM ICT
// Elapsed time: 1591 seconds
selectCodeEditor("mem_mapped_keyboard.v", 261, 131); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 261, 131, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("mem_mapped_keyboard.v", 261, 131, false, false, false, true, false); // cl (w, cp) - Popup Trigger
selectMenuItem(RDIResource.HInputHandler_REPLACE_TEXT, "Replace..."); // af (al, Popup.HeavyWeightWindow)
selectComboBox("FindAndReplaceDialog.cp_Replace with:", "reset", -1); // JComboBox (cp, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cp_Find", "Find"); // JButton (cp, FindAndReplaceDialog)
selectCodeEditor("mem_mapped_keyboard.v", 344, 321); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 266, 109); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 266, 109, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("mem_mapped_keyboard.v", 266, 109, false, false, false, true, false); // cl (w, cp) - Popup Trigger
selectMenuItem(RDIResource.HInputHandler_REPLACE_TEXT, "Replace..."); // af (al, Popup.HeavyWeightWindow)
selectComboBox("FindAndReplaceDialog.cp_Find what:", "state", -1); // JComboBox (cp, FindAndReplaceDialog)
selectComboBox("FindAndReplaceDialog.cp_Replace with:", "stage", -1); // JComboBox (cp, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cp_Close", "Close"); // JButton (cp, FindAndReplaceDialog)
selectCodeEditor("mem_mapped_keyboard.v", 261, 111); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 261, 111, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("mem_mapped_keyboard.v", 261, 111, false, false, false, true, false); // cl (w, cp) - Popup Trigger
selectMenuItem(RDIResource.HInputHandler_REPLACE_TEXT, "Replace..."); // af (al, Popup.HeavyWeightWindow)
selectComboBox("FindAndReplaceDialog.cp_Replace with:", "state", -1); // JComboBox (cp, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cp_Find", "Find"); // JButton (cp, FindAndReplaceDialog)
selectCodeEditor("mem_mapped_keyboard.v", 217, 271); // cl (w, cp)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed time: 10 seconds
selectCodeEditor("mem_mapped_keyboard.v", 154, 163); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 381, 113); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 381, 113, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("mem_mapped_keyboard.v", 381, 113, false, false, false, true, false); // cl (w, cp) - Popup Trigger
selectMenuItem(RDIResource.HInputHandler_REPLACE_TEXT, "Replace..."); // af (al, Popup.HeavyWeightWindow)
selectButton("FindAndReplaceDialog.cp_Find", "Find"); // JButton (cp, FindAndReplaceDialog)
selectCodeEditor("mem_mapped_keyboard.v", 273, 288); // cl (w, cp)
// Elapsed time: 10 seconds
selectCodeEditor("mem_mapped_keyboard.v", 73, 164); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 73, 164, false, false, false, false, true); // cl (w, cp) - Double Click
selectCodeEditor("mem_mapped_keyboard.v", 73, 164, false, false, false, true, false); // cl (w, cp) - Popup Trigger
selectMenuItem(RDIResource.HInputHandler_REPLACE_TEXT, "Replace..."); // af (al, Popup.HeavyWeightWindow)
selectButton("FindAndReplaceDialog.cp_Find", "Find"); // JButton (cp, FindAndReplaceDialog)
selectCodeEditor("mem_mapped_keyboard.v", 160, 162); // cl (w, cp)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed time: 10 seconds
selectCodeEditor("mem_mapped_keyboard.v", 111, 314); // cl (w, cp)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
selectCodeEditor("mem_mapped_keyboard.v", 315, 357); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 261, 219); // cl (w, cp)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed time: 42 seconds
selectCodeEditor("mem_mapped_keyboard.v", 280, 297); // cl (w, cp)
selectButton(RDIResource.HCodeEditor_CLOSE, (String) null); // k (aL, cp)
// Elapsed time: 173 seconds
selectCodeEditor("mem_mapped_keyboard.v", 132, 112); // cl (w, cp)
setText(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "restart"); // l (aT, cp)
selectCodeEditor("mem_mapped_keyboard.v", 90, 26); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 90, 26, false, false, false, false, true); // cl (w, cp) - Double Click
// Elapsed time: 20 seconds
setText(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "restart", true); // l (aT, cp)
selectCodeEditor("mem_mapped_keyboard.v", 75, 155, false, false, false, true, false); // cl (w, cp) - Popup Trigger
selectMenuItem(RDIResource.HInputHandler_REPLACE_TEXT, "Replace..."); // af (al, Popup.HeavyWeightWindow)
selectComboBox("FindAndReplaceDialog.cp_Replace with:", "resetgame", -1); // JComboBox (cp, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cp_Find", "Find"); // JButton (cp, FindAndReplaceDialog)
selectCodeEditor("mem_mapped_keyboard.v", 274, 198); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 457, 172); // cl (w, cp)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed time: 12 seconds
selectCodeEditor("mem_mapped_keyboard.v", 139, 178); // cl (w, cp)
selectCodeEditor("mem_mapped_keyboard.v", 204, 350); // cl (w, cp)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
